@inject GlamCentral.Libraries.Login.LoginFuncionario funcionario

<nav class="navbar navbar-expand-lg navbar-light fixed-top" style="background-image: linear-gradient(white, whitesmoke, #f3fde9, #CBF5A4);">
	<a asp-action="Painel" asp-controller="Home" class="navbar-brand">
		<img src="~/img/Logo-GlamCentral (1).png" alt="glam-central" />
	</a>
	<button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent"
			aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
		<span class="navbar-toggler-icon"></span>
	</button>
	<div class="collapse navbar-collapse" id="navbarSupportedContent">
		<ul class="navbar-nav">

			<li class="nav-item @((ViewContext.RouteData.Values["controller"].ToString() == "Home"
					&& ViewContext.RouteData.Values["action"].ToString() == "Painel") ? "menuSelectedHome" : "")">
				<a class="nav-link active" asp-action="Painel" asp-controller="Home"><i class="fas fa-home"></i> Home <span class="sr-only">(current)</span></a>
			</li>

			@if (funcionario.GetFuncionario()?.Cargo == (int)CargoFuncionario.Cabelereiro || funcionario.GetFuncionario()?.Cargo == (int)CargoFuncionario.Gerente)
			{
				<li class="form-group in-row downText">
					<div class="dropdown-submenu">
						<a class="nav-link active @((ViewContext.RouteData.Values["controller"].ToString() == "Agenda"
                        && ViewContext.RouteData.Values["action"].ToString() == "Index") ? "menuSelected" : "")" asp-action="Index" asp-controller="Agenda" id="navbarDropdownAgenda" role="button" data-toggle="dropdown"
					   aria-haspopup="true" aria-expanded="false">
							<i class="fas fa-calendar"></i> Agenda
						</a>
						<ul class="dropdown-menu multi-level" role="menu" aria-labelledby="dropdownMenu">
							@{
								var subMenu = new List<string> { "Cadastrar", "Relatórios" };

								foreach (var item in subMenu)
								{
									@await Html.PartialAsync("Submenu/DropDown/_Agenda.cshtml", new ViewDataDictionary(ViewData)
									{{"subMenu", item} })
								}
							}
						</ul>
					</div>
				</li>
			}

			@if (funcionario.GetFuncionario()?.Cargo == (int)CargoFuncionario.Cabelereiro || funcionario.GetFuncionario()?.Cargo == (int)CargoFuncionario.Gerente)
			{
				<li class="form-group in-row downText">
					<div class="dropdown-submenu">
						<a class="nav-link active @((ViewContext.RouteData.Values["controller"].ToString() == "Pagamento"
				&& ViewContext.RouteData.Values["action"].ToString() == "Cadastrar") ? "menuSelected" : "")" asp-action="Cadastrar" asp-controller="Agenda" id="navbarDropdownPagamento" role="button" data-toggle="dropdown"
					   aria-haspopup="true" aria-expanded="false">
							<i class="fas fa-calendar"></i> Pagamento
						</a>
						<ul class="dropdown-menu multi-level" role="menu" aria-labelledby="dropdownMenu">
							@{
								var subMenu = new List<string> { "Cadastrar", "Relatórios" };

								foreach (var item in subMenu)
								{
									@await Html.PartialAsync("Submenu/DropDown/_Agenda.cshtml", new ViewDataDictionary(ViewData)
						{{"subMenu", item} })
								}
							}
						</ul>
					</div>
				</li>
			}

			@if (funcionario.GetFuncionario()?.Cargo == (int)CargoFuncionario.Cabelereiro || funcionario.GetFuncionario()?.Cargo == (int)CargoFuncionario.Gerente)
			{
				<li class="form-group in-row downText">
					<div class="dropdown-submenu">
						<a class="nav-link dropdown-toggle active  @((ViewContext.RouteData.Values["controller"].ToString() == "Procedimento"
				&& ViewContext.RouteData.Values["action"].ToString() == "Index") ? "menuSelected" : "")" asp-action="Index" asp-controller="Procedimento" id="navbarDropdownProcedimento" role="button" data-toggle="dropdown"
					   aria-haspopup="true" aria-expanded="false">
							<i class="fas fa-shower"></i> Procedimento
						</a>
						<ul class="dropdown-menu multi-level" role="menu" aria-labelledby="dropdownMenu">
							@{
								var subMenu = new List<string> { "Cadastrar", "Relatórios" };

								foreach (var item in subMenu)
								{
									@await Html.PartialAsync("Submenu/DropDown/_Procedimento.cshtml", new ViewDataDictionary(ViewData)
						{{"subMenu", item} })
								}
							}
						</ul>
					</div>
				</li>
			}

			@if (funcionario.GetFuncionario()?.Cargo == (int)CargoFuncionario.Estoquista || funcionario.GetFuncionario()?.Cargo == (int)CargoFuncionario.Gerente)
			{
				<li class="form-group in-row downText">
					<div class="dropdown-submenu">
						<a class="nav-link dropdown-toggle active  @((ViewContext.RouteData.Values["controller"].ToString() == "Produto"
				&& ViewContext.RouteData.Values["action"].ToString() == "Index") ? "menuSelected" : "")" asp-action="Index" asp-controller="Produto" id="navbarDropdownProduto" role="button" data-toggle="dropdown"
					   aria-haspopup="true" aria-expanded="false">
							<i class="fas fa-shopping-bag"></i> Produto
						</a>
						<ul class="dropdown-menu multi-level" role="menu" aria-labelledby="dropdownMenu">
							@{
								var subMenu = new List<string> { "Cadastrar", "Relatórios" };

								foreach (var item in subMenu)
								{
									@await Html.PartialAsync("Submenu/DropDown/_Produto.cshtml", new ViewDataDictionary(ViewData)
						{{"subMenu", item} })
								}
							}
						</ul>
					</div>
				</li>
			}

			@if (funcionario.GetFuncionario()?.Cargo == (int)CargoFuncionario.Gerente)
			{
				<li class="form-group in-row downText">
					<div class="dropdown-submenu">
						<a class="nav-link dropdown-toggle active  @((ViewContext.RouteData.Values["controller"].ToString() == "Cliente"
				&& ViewContext.RouteData.Values["action"].ToString() == "Index") ? "menuSelected" : "")" asp-action="Index" asp-controller="Cliente" id="navbarDropdownCliente" role="button" data-toggle="dropdown"
					   aria-haspopup="true" aria-expanded="false">
							<i class="fas fa-id-badge"></i> Cliente
						</a>
						<ul class="dropdown-menu multi-level" role="menu" aria-labelledby="dropdownMenu">
							@{
								var subMenu = new List<string> { "Cadastrar", "Relatórios" };

								foreach (var item in subMenu)
								{
									@await Html.PartialAsync("Submenu/DropDown/_Cliente.cshtml", new ViewDataDictionary(ViewData)
									{{"subMenu", item} })
								}
							}
						</ul>
					</div>
				</li>
			}

			@if (funcionario.GetFuncionario()?.Cargo == (int)CargoFuncionario.Gerente)
			{
				<li class="form-group in-row downText">
					<div class="dropdown-submenu">
						<a class="nav-link dropdown-toggle active  @((ViewContext.RouteData.Values["controller"].ToString() == "Funcionario"
				&& ViewContext.RouteData.Values["action"].ToString() == "Index") ? "menuSelected" : "")" asp-action="Index" asp-controller="Funcionario" id="navbarDropdownFuncionario" role="button" data-toggle="dropdown"
					   aria-haspopup="true" aria-expanded="false">
							<i class="fas fa-user"></i> Funcionario
						</a>
						<ul class="dropdown-menu multi-level" role="menu" aria-labelledby="dropdownMenu">
							@{
								var subMenu = new List<string> { "Cadastrar", "Relatórios" };

								foreach (var item in subMenu)
								{
									@await Html.PartialAsync("Submenu/DropDown/_Funcionario.cshtml", new ViewDataDictionary(ViewData)
						{{"subMenu", item} })
								}
							}
						</ul>
					</div>
				</li>
			}
		</ul>
	</div>

	<div>
		<a class="usuarioLogado userName">Usuário:<span class="sr-only">(current)</span></a>
		@*<a class="usuarioLogado userName"><br> @funcionario.GetFuncionario().Nome <span class="sr-only">(current)</span></a>*@

		<button type="button" id="btnUsuario" data-toggle="modal" data-target="#myModal2">
			<br> @funcionario.GetFuncionario().Nome
		</button>
	</div>
	<div>
		<a class="nav-link" style="color: red; font-weight: bold; margin-left:20px;" asp-controller="Home" asp-action="Logout">Sair <span class="sr-only">(current)</span></a>
	</div>
</nav>


<div class="container demo">
	<div class="modal right fade" id="myModal2" tabindex="-1" role="dialog" aria-labelledby="myModalLabel2">
		<div class="modal-dialog" role="document">
			<div class="modal-content">

				<div class="modal-header">
					<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
					<h4 class="modal-title" id="myModalLabel2">Right Sidebar</h4>
				</div>

				<div class="modal-body">
					<p>
						Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them accusamus labore sustainable VHS.
					</p>
				</div>

			</div><!-- modal-content -->
		</div><!-- modal-dialog -->
	</div><!-- modal -->
</div>
